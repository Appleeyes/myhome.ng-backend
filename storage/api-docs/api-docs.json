{
    "openapi": "3.0.0",
    "info": {
        "title": "MyHome.NG",
        "description": "The MyHome.ng project is a web application designed to streamline the process of finding, renting, and managing properties.",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/set-role": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Set the user role before registration",
                "description": "Sets the user role before the user completes registration.",
                "operationId": "setUserRole",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Role of the user (user or Landlord)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role set successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role set successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Register a new user with the provided information.",
                "operationId": "userRegister",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "YOUR_ACCESS_TOKEN"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "data": {
                                            "properties": {
                                                "errors": {
                                                    "example": "Validation failed"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate a user",
                "description": "Authenticate a user with the provided email and password",
                "operationId": "userLogin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User authenticated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User authenticated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "YOUR_TOKEN"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication failed"
                                        },
                                        "data": {
                                            "properties": {
                                                "errors": {
                                                    "example": "Authentication failed"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "data": {
                                            "properties": {
                                                "errors": {
                                                    "example": "Validation failed"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/{user}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "description": "Deletes a user by ID",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/{user}/send-verification-email": {
            "post": {
                "tags": [
                    "Email"
                ],
                "summary": "Send a verification code to the user's email",
                "description": "Sends a verification code to the user's email for verification purposes.",
                "operationId": "sendEmail",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to receive the verification code",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification code sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/verify-email": {
            "post": {
                "tags": [
                    "Email"
                ],
                "summary": "Verify the user's email using the verification code",
                "description": "Verifies the user's email by checking the verification code.",
                "operationId": "verifyEmail",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of the user to be verified",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "verification_code",
                        "in": "query",
                        "description": "Verification code sent to the user's email",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1234
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid verification code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid verification code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/contact-agent/{productId}": {
            "post": {
                "tags": [
                    "Chats"
                ],
                "summary": "Start a chat with an agent",
                "description": "Start a chat with an agent about a product",
                "operationId": "startChat",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chat started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chat started successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Chat"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/chats": {
            "get": {
                "tags": [
                    "Chats"
                ],
                "summary": "Get all chats for the authenticated user",
                "description": "Get all chats for the authenticated user",
                "operationId": "getChats",
                "responses": {
                    "200": {
                        "description": "Chats retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chats retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "product_id": {
                                                        "type": "integer"
                                                    },
                                                    "tenant_id": {
                                                        "type": "integer"
                                                    },
                                                    "agent_id": {
                                                        "type": "integer"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "unread_count": {
                                                        "type": "integer"
                                                    },
                                                    "messages": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "chat_id": {
                                                                    "type": "integer"
                                                                },
                                                                "sender_id": {
                                                                    "type": "integer"
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                },
                                                                "created_at": {
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                },
                                                                "updated_at": {
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                },
                                                                "read_at": {
                                                                    "type": "string",
                                                                    "format": "date-time",
                                                                    "nullable": true
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "product": {
                                                        "$ref": "#/components/schemas/Product"
                                                    },
                                                    "tenant": {
                                                        "$ref": "#/components/schemas/User"
                                                    },
                                                    "agent": {
                                                        "$ref": "#/components/schemas/User"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chats not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/chats/{chatId}/messages": {
            "post": {
                "tags": [
                    "Chats"
                ],
                "summary": "Send a message in a chat",
                "description": "Send a message to an agent in a chat",
                "operationId": "sendMessage",
                "parameters": [
                    {
                        "name": "chatId",
                        "in": "path",
                        "description": "ID of the chat",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "example": "Hello, I am interested in this property......"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": "Message sent successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Message"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/chats/{chatId}": {
            "get": {
                "tags": [
                    "Chats"
                ],
                "summary": "Get a specific chat by ID for the authenticated user",
                "description": "Retrieve a specific chat by ID. Includes details of both the tenant and the agent involved in the chat.",
                "operationId": "getChatById",
                "parameters": [
                    {
                        "name": "chatId",
                        "in": "path",
                        "description": "ID of the chat to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chat retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chat retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "product_id": {
                                                    "type": "integer"
                                                },
                                                "tenant_id": {
                                                    "type": "integer"
                                                },
                                                "agent_id": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "messages": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "chat_id": {
                                                                "type": "integer"
                                                            },
                                                            "sender_id": {
                                                                "type": "integer"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "read_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "product": {
                                                    "$ref": "#/components/schemas/Product"
                                                },
                                                "tenant": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "agent": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chat not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/recommended": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get recommended products",
                "description": "Retrieve a list of recommended products.",
                "operationId": "recommendedProducts",
                "responses": {
                    "200": {
                        "description": "Recommended products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recommended products retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No recommended product found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No recommended product found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/popular": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get popular products",
                "description": "Retrieve a list of popular products.",
                "operationId": "popularProducts",
                "responses": {
                    "200": {
                        "description": "Popular products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Popular products retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No popular product found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No popular product found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/{productId}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details",
                "description": "Retrieve details of a product by its ID.",
                "operationId": "productDetails",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Popular products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Popular products retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No popular product found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No popular product found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Chat": {
                "title": "Chat",
                "description": "Chat model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "tenant_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "agent_id": {
                        "type": "integer",
                        "example": 4
                    }
                },
                "type": "object"
            },
            "Message": {
                "title": "Message",
                "description": "Message model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "chat_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "sender_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "message": {
                        "type": "string",
                        "example": "Hello, I am interested in this property......"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "property_type": {
                        "type": "string",
                        "example": "Apartment"
                    },
                    "price": {
                        "type": "integer",
                        "example": 10000000
                    },
                    "listing_type": {
                        "type": "string",
                        "example": "Silver Listing"
                    },
                    "listing_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "recommended": {
                        "type": "boolean",
                        "example": true
                    },
                    "popular": {
                        "type": "boolean",
                        "example": true
                    },
                    "location": {
                        "type": "string",
                        "example": "Lekki Phase 1, Admirality way"
                    },
                    "image_path": {
                        "type": "string",
                        "example": "https://res.cloudinary.com/dv2lhfdnv/image/upload/v1720976292/myHome/gjbfoweby2cbrnz8qe6h.png"
                    },
                    "erf_size": {
                        "type": "string",
                        "example": "1239 m2"
                    },
                    "floor_size": {
                        "type": "string",
                        "example": "42 m2"
                    },
                    "dues_and_levies": {
                        "type": "integer",
                        "example": 10000
                    },
                    "pet_allowed": {
                        "type": "boolean",
                        "example": true
                    },
                    "bedrooms": {
                        "type": "integer",
                        "example": 2
                    },
                    "bathrooms": {
                        "type": "integer",
                        "example": 2
                    },
                    "parking_lot": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "0987654321"
                    },
                    "image": {
                        "type": "string",
                        "example": "http://image.png"
                    },
                    "role": {
                        "type": "string",
                        "example": "tenant"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        }
    }
}